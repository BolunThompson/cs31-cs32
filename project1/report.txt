1. I inputed 0 registered voters, 1 Trarris voter, and 0 Hump voters to get the 
   nonsencical output of "inf%" Trarris voters and "-nan%" Hump voters.

   The exact input and output follows:
 > How many registered voters were surveyed? 0
 > How many of them say they will probably vote for Trarris? 1
 > How many of them say they will probably vote for Hump? 0
 
 > inf% say they will probably vote for Trarris.
 > -nan% say they will probably vote for Hump.
 > Trarris is predicted to win the election.

2. In logic_error.cpp, I swapped the comparison sign from ">" to "<",
   leading to a Trarris predicted victory if she got less votes than Hump.

   A test input and output follows:
 > How many registered voters were surveyed? 10
 > How many of them say they will probably vote for Trarris? 3
 > How many of them say they will probably vote for Hump? 7
 > 
 > 30.0% say they will probably vote for Trarris.
 > 70.0% say they will probably vote for Hump.
 > Trarris is predicted to win the election.
   ^^^^^^^ INCORRECT.

3. I made two changes; I removed the semicolon from line 17
   (leading to the expression never being parsed as a statemenet)
   and misspelled the "setf" method to "set" on line 22
   (leading to the compiler to be unable find that method).

   Specifically, Clang reported the errors of "expected ';' after expression"
   and "no member named 'set' in 'std::basic_ostream<char>'", as expected.

